#!/usr/bin/env python

'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
'''

from itertools import *
from math import *
from operator import *

from PE_sequences import iPentagonal
from quadratics import solveIntegerQuadratic

def pentagonal(n):
	return n*(3*n-1)//2

def problem44():
	pentagonals = set(pentagonal(n) for n in range(1, 3000))
	for p in combinations(pentagonals, 2):
		if add(*p) in pentagonals and abs(sub(*p)) in pentagonals:
			return abs(sub(*p))
import math
def isPentagonal(x):
   n = (1+math.sqrt(1+24*x))/6
   return int(n) == n

def problem44a():
	#pentagonals = set(pentagonal(n) for n in range(1, 3000) if any( isPentagonal(pentagonal(n) - isPentagonal(i)) for i in range(1,n) ))
	from factorGenerating import orderedlist
	pents = iPentagonal()
	next(pents)
	pentagonals = [next(pents),next(pents)]
	i = 2
	for p in pents:
		pentagonals.append(p)
		if pentagonals[i] + pentagonals[i-1] < p:
			less = orderedlist(pentagonals[0:i])
			greater = set(pentagonals[i+1:])
			print(pentagonals[i] - pentagonals[i-1])
			
			for q in less[pentagonals[i+1] - pentagonals[i]:10**12]:
				if p - q in pentagonals[0:i] and p+q in greater:
					return p-q
			i += 1

from cProfile import run
if __name__ == "__main__":
	print(problem44() == 5482660)
	run("problem44()")
	#print(problem44a())
	#print(problem44a() == 5482660)
	#run("problem44a()")
