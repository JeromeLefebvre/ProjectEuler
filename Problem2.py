#!/usr/local/bin/python3.3

'''
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''

'''
As F_n = [\phi^n / 5**(1/2)] i.e. the closests integer two \phi^n / 5**(1/2)]
Then F_n < GOAL if n < (6 * log(40) + 1/2log(5))/log(phi)
'''
from PE_sequences import fib, phi
from math import log

def problem2():
	upperBound = int((6*log(10) + log(4) + 1/2*log(5))/log(phi))
	# The +1 is to fix Fib so that we are dealing with the sequence Project euler uses
	return sum([fib(i+1) for i in range(1,upperBound+1) if fib(i+1)%2 == 0])

import cProfile
if __name__ == "__main__":
	print(problem2() == 4613732)
	cProfile.run("problem2()")